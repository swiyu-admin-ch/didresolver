// SPDX-License-Identifier: MIT
namespace did {

};

[ExternalInterface="didtoolbox"]
typedef extern TrustDidWebIdResolutionError;

[ExternalInterface="didtoolbox"]
typedef extern TrustDidWebId;

[ExternalInterface="didtoolbox"]
typedef extern TrustDidWebError;

[ExternalInterface="didtoolbox"]
typedef extern TrustDidWeb;

[ExternalInterface="didtoolbox"]
typedef extern Ed25519Signature;

[ExternalInterface="didtoolbox"]
typedef extern Ed25519SigningKey;

[ExternalInterface="didtoolbox"]
typedef extern Ed25519VerifyingKey;

[ExternalInterface="didtoolbox"]
typedef extern Ed25519KeyPair;

[ExternalInterface="didtoolbox"]
typedef extern DidDocumentState;

[External="didtoolbox"]
typedef extern Jwk;

[External="didtoolbox"]
typedef extern VerificationType;

[External="didtoolbox"]
typedef extern VerificationMethod;

[ExternalInterface="didtoolbox"]
typedef extern DidDoc;

[ExternalInterface="didtoolbox"]
typedef extern DidLogEntryJsonSchema;

[ExternalInterface="didtoolbox"]
typedef extern DidLogEntryValidatorError;

[ExternalInterface="didtoolbox"]
typedef extern DidLogEntryValidator;

[Error]
enum DidResolveError {
    "DidNotSupported",
    "MalformedDid",
    "InvalidDidLog"
};

interface Did {
    [Throws=DidResolveError]
    constructor(string did_tdw);
    /// Returns the url part from the supplied DID, if supported and not malformed.
    [Throws=DidResolveError]
    string get_url();
    [Throws=DidResolveError]
    DidDoc resolve(string did_tdw_log);
};