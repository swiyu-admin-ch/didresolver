name: Build library (Kotlin)

on:
  workflow_dispatch:

# limit the concurrency of entire workflow runs for a specific branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-for-matrix:
    name: Build Kotlin bindings
    strategy:
      max-parallel: 3
      matrix:
        os: [ ubuntu, windows, macos ]
        include:
          - os: ubuntu
            label: latest
            arch: x64
            file-prefix: lib
            #file-suffix:
            file-extension: so
          # ubuntu-24.04-arm,  ubuntu-22.04-arm
          - os: ubuntu
            label: 24.04-arm
            arch: arm64
            file-prefix: lib
            file-suffix: arm64
            file-extension: so
          - os: windows
            label: latest
            arch: x64
            #file-prefix:
            #file-suffix:
            file-extension: dll
          - os: macos
            label: latest
            arch: arm64
            file-prefix: lib
            #file-suffix:
            file-extension: dylib
    # See https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories
    runs-on: ${{ matrix.os }}-${{ matrix.label }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Rust toolchain (stable)
        # For more Rust extensions, please visit: https://github.com/marketplace?query=rust&type=actions
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run:  cargo build --release
      - name: Generate UniFFI bindings
        run:  |
          cargo run --bin uniffi-bindgen generate --library target/release/${{ matrix.file-prefix }}didresolver${{ matrix.file-suffix }}.${{ matrix.file-extension }} --language kotlin --out-dir bindings/kotlin
          cp target/release/${{ matrix.file-prefix }}didresolver${{ matrix.file-suffix }}.${{ matrix.file-extension }} bindings/kotlin/
      - name: Save kotlin artifact
        uses: actions/upload-artifact@v4
        with:
          name: kotlin-bindings-${{ matrix.os }}-${{ matrix.arch }}
          path: bindings/kotlin
